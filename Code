import pandas as pd
from pandas import Series, DataFrame
import pandas.io.data as web
from datetime import datetime
import numpy as np
import matplotlib.pyplot as plt
import numpy as np
from math import log, e
from scipy.stats import norm 

def calculate_Call_Delta(div, t, d1):
    Call_Delta = e**(-div*t) * norm.cdf(d1)
    return Delta

def calculate_Call_Theta(T, S_0, v, div, t, d1, r, X, d2):
    Call_Theta = 1/T * (-(S_0* v * e**(-(div*t)) / (2 * sqrt(t)) * 1/(sqrt(2 * pi)) * e**((-(d1)**2)/2))
                      - (r * X * e**(-(r*t)) * norm.cdf(d2)) + div * S_0 * e**(-(div*t)) * norm.cdf(d1))
    return Call_Theta

def calculate_Gamma(div, t, S_0, v, d1):
    Gamma = (e**(-div*t)) / (S_0 * v * sqrt(t)) * (1/(sqrt(2*pi))) * e**((-(d1)**2)/2) 
    return Gamma

def calculate_Vega(S_0, div, t, d1):
    Vega = 1/100.0 * (S_0 * e**(-(div*t)) * sqrt(t)) * (1 / (sqrt(2 * pi))) * e**((-(d1)**2)/2) 
    return Vega

def calculate_Rho(X, t, r, d2):
    Rho = (1/100.0) * (X * t *math.e**(-(r*t))) * (norm.cdf(d2))
    return Rho

def calculate_d1(S_0, X, t, r, div, v):
    d1 = (log(S_0/X) + t * (r - div + (v**2)/2)) / (v * sqrt(t))
    return d1

def calculate_d2(d1, v, t):
    d2 = (d1 - v * sqrt(t))
    return d2

def load_excel_file(filename, tabname):
    data = pd.read_excel(filename, tabname, parse_date=True)

    return data
    
data = load_excel_file('Options_Test.xlsx', 'Hoja1')
data.head()    

def clean_data(data_file):
    to_delete = [
        #"EX"
        "Open Interest",
        "Settle",
        #"Data",
        #"Source",
        "Time[L]",
        "Type",
        "Qualifiers"]

    for key in to_delete:
        del data[key]
clean_data(data)

for key in data.RIC.keys():
    data.RIC[key] = data.RIC[key].replace('.','')
    
    
data['Days_to_Exp'] = (data.Exp_Date - data.Date)
data = data.dropna()
data = data.sort('Date')
data.head()



""" notas para pablo
#S_0 = underlying price (USD per share)
#X = strike price (USD per share)
#v = volatility (% in fraction)
#r = continuously compounded risk-free interest rate (% in fraction)
#div = continuously compounded dividend yield (% in fraction)
#N = where N(x) is the standard normal cumulative distribution function.
#t = time to expiration (in x/365 formula) so basically as a fraction
#x = is number of days to exp. that will be used in function to get t
#T = Total calendar days in 1 year
"""
